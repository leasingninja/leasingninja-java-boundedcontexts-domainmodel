<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.leasingninja</groupId>
	<artifactId>leasingninja</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>LeasingNinja</name>
	<description>The DDD demonstration app</description>


	<properties>
		<!-- Build -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>23</java.version>
		<maven.compiler.version>3.14.0</maven.compiler.version>
		<surefire.version>3.5.2</surefire.version>
		<failsafe.version>3.5.2</failsafe.version>

		<!-- Libraries -->
        <jmolecules.version>1.10.0</jmolecules.version>
        <jmolecules-integrations.version>1.6.0</jmolecules-integrations.version>
		<dddbits.version>0.0.1</dddbits.version>
		<spring.boot.version>3.4.3</spring.boot.version>
		<mapstruct.version>1.6.3</mapstruct.version>
		<gson.version>2.12.1</gson.version>

		<!-- Libraries for test -->
		<junit.jupiter.version>5.12.1</junit.jupiter.version>
		<junit.platform.version>1.10.3</junit.platform.version>
		<assertj.version>3.27.3</assertj.version>
		<mockito.version>5.15.2</mockito.version>
		<archunit.version>1.4.0</archunit.version>
	</properties>

	<modules>
		<!-- <module>leasingninja-sharedkernel</module> -->
		<module>leasingninja-sales</module>
		<module>leasingninja-riskmanagement</module>
		<module>leasingninja-webapp</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.jupiter.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.jmolecules</groupId>
			<artifactId>jmolecules-layered-architecture</artifactId>
			<version>${jmolecules.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jmolecules</groupId>
			<artifactId>jmolecules-ddd</artifactId>
			<version>${jmolecules.version}</version>
		</dependency>
        <dependency>
            <groupId>org.jmolecules.integrations</groupId>
            <artifactId>jmolecules-archunit</artifactId>
            <version>${jmolecules-integrations.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
			<groupId>io.hschwentner.dddbits</groupId>
			<artifactId>dddbits</artifactId>
			<version>${dddbits.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>org.mapstruct</groupId> -->
<!-- 			<artifactId>mapstruct-processor</artifactId> -->
<!-- 			<version>${mapstruct.version}</version> -->
<!-- 		</dependency> -->

		<!-- Gson: Java to Json conversion -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
			<scope>compile</scope>
		</dependency>

<!-- 		<dependency> -->
<!-- 			<groupId>org.junit.platform</groupId> -->
<!-- 			<artifactId>junit-platform-launcher</artifactId> -->
<!-- 			<scope>test</scope> -->
<!-- 		</dependency> -->

		<!--
                 <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-engine</artifactId>
                    <scope>test</scope>
                </dependency>

                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-api</artifactId>
                    <scope>test</scope>
                </dependency>
                -->

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5</artifactId>
			<version>${archunit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<release>${java.version}</release>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.version}</version>
				<!--
				 Idea from https://sormuras.github.io/blog/2018-09-11-testing-in-the-modular-world#in-module-testing-with-module-infojava
				<configuration>
					<argLine>
						- -patch-module io.leasingninja.sales=src/main/java
						- -patch-module io.leasingninja.riskmanagement=src/main/java
					</argLine>
				</configuration>
				-->

				<!--
				<configuration>
					<argLine>
                        - -illegal-access=permit
                    </argLine>
					<useSystemClassLoader>true</useSystemClassLoader>
					<useManifestOnlyJar>false</useManifestOnlyJar>
				</configuration>
				 -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe.version}</version>
			</plugin>
	</plugins>
	</build>

</project>
